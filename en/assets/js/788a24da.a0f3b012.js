"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[3188],{4371:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Scalability/DB_Sharding_and_Replication","title":"DB Sharding & Replication","description":"This document outlines best practices for implementing database sharding and replication in a scalable Spring Boot architecture.","source":"@site/docs/09_Scalability/04_DB_Sharding_and_Replication.md","sourceDirName":"09_Scalability","slug":"/Scalability/DB_Sharding_and_Replication","permalink":"/bbs-docs/en/docs/Scalability/DB_Sharding_and_Replication","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Auto Scaling Strategy","permalink":"/bbs-docs/en/docs/Scalability/Auto_Scaling_Strategy"}}');var s=i(4848),a=i(8453);const t={},l="DB Sharding & Replication",o={},d=[{value:"1. Overview",id:"1-overview",level:2},{value:"2. Sharding",id:"2-sharding",level:2},{value:"What is Sharding?",id:"what-is-sharding",level:3},{value:"Strategies",id:"strategies",level:3},{value:"Implementation",id:"implementation",level:3},{value:"3. Replication",id:"3-replication",level:2},{value:"Primary-Replica",id:"primary-replica",level:3},{value:"Spring Boot Setup",id:"spring-boot-setup",level:3},{value:"Failover",id:"failover",level:3},{value:"4. Challenges",id:"4-challenges",level:2},{value:"5. Monitoring &amp; Maintenance",id:"5-monitoring--maintenance",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"db-sharding--replication",children:"DB Sharding & Replication"})}),"\n",(0,s.jsx)(n.p,{children:"This document outlines best practices for implementing database sharding and replication in a scalable Spring Boot architecture."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-overview",children:"1. Overview"}),"\n",(0,s.jsx)(n.p,{children:"Sharding and replication allow the system to scale horizontally and improve availability. Sharding splits data across nodes; replication ensures fault tolerance and read scalability."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-sharding",children:"2. Sharding"}),"\n",(0,s.jsx)(n.h3,{id:"what-is-sharding",children:"What is Sharding?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Partitioning data into smaller, faster, more manageable parts."}),"\n",(0,s.jsx)(n.li,{children:"Each shard handles a subset of data (e.g., by tenant ID or user ID)."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"strategies",children:"Strategies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Hash-based sharding"}),": Evenly distributes data, but limits range queries."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Range-based sharding"}),": Efficient for queries on time or numeric ranges."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Directory-based sharding"}),": Central map that routes to the correct shard."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use sharding middleware (e.g., ",(0,s.jsx)(n.strong,{children:"ShardingSphere"}),", ",(0,s.jsx)(n.strong,{children:"Vitess"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Use separate ",(0,s.jsx)(n.code,{children:"DataSource"})," beans per shard in Spring Boot."]}),"\n",(0,s.jsxs)(n.li,{children:["Route based on a key using ",(0,s.jsx)(n.code,{children:"AbstractRoutingDataSource"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-replication",children:"3. Replication"}),"\n",(0,s.jsx)(n.h3,{id:"primary-replica",children:"Primary-Replica"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Writes go to the primary DB."}),"\n",(0,s.jsx)(n.li,{children:"Reads are routed to one of many replicas."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"spring-boot-setup",children:"Spring Boot Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"AbstractRoutingDataSource"})," for read/write separation."]}),"\n",(0,s.jsxs)(n.li,{children:["Combine with tools like ",(0,s.jsx)(n.strong,{children:"PgBouncer"})," or ",(0,s.jsx)(n.strong,{children:"ProxySQL"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"failover",children:"Failover"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use health checks to reroute traffic if primary fails."}),"\n",(0,s.jsxs)(n.li,{children:["Automate with ",(0,s.jsx)(n.strong,{children:"Patroni"})," (Postgres), ",(0,s.jsx)(n.strong,{children:"Orchestrator"})," (MySQL)."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-challenges",children:"4. Challenges"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistency"}),": Use eventual consistency models for reads."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Transaction boundaries"}),": Avoid cross-shard transactions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Join limitations"}),": Denormalize data if joins cross shards."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-monitoring--maintenance",children:"5. Monitoring & Maintenance"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Track replication lag via Prometheus exporters."}),"\n",(0,s.jsx)(n.li,{children:"Monitor shard growth and rebalancing needs."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Document Version: 1.0"}),"\n",(0,s.jsx)(n.li,{children:"Date: 2025-06-24"}),"\n",(0,s.jsx)(n.li,{children:"Author: ArturChernets"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var r=i(6540);const s={},a=r.createContext(s);function t(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);