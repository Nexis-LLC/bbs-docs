"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[3523],{8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var a=s(6540);const t={},r=a.createContext(t);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},8532:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"Data/Migrations","title":"Migrations: Liquibase Strategy","description":"This document defines the database migration strategy using Liquibase, ensuring versioned, reversible, and consistent schema changes.","source":"@site/docs/06_Data/02_Migrations.md","sourceDirName":"06_Data","slug":"/Data/Migrations","permalink":"/bbs-docs/en/docs/Data/Migrations","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Data Model: Logical Schema","permalink":"/bbs-docs/en/docs/Data/Data_Model"},"next":{"title":"Caching Strategy: Redis & App-level","permalink":"/bbs-docs/en/docs/Data/Caching_Strategy"}}');var t=s(4848),r=s(8453);const i={},l="Migrations: Liquibase Strategy",c={},o=[{value:"1. Directory Layout",id:"1-directory-layout",level:2},{value:"2. Master Changelog (<code>changelog-master.xml</code>)",id:"2-master-changelog-changelog-masterxml",level:2},{value:"3. Sample Changeset (<code>001-create-users.xml</code>)",id:"3-sample-changeset-001-create-usersxml",level:2},{value:"4. Best Practices",id:"4-best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"migrations-liquibase-strategy",children:"Migrations: Liquibase Strategy"})}),"\n",(0,t.jsxs)(n.p,{children:["This document defines the ",(0,t.jsx)(n.strong,{children:"database migration strategy"})," using Liquibase, ensuring versioned, reversible, and consistent schema changes."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"1-directory-layout",children:"1. Directory Layout"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"db/migrations/\n\u251c\u2500\u2500 changelog-master.xml\n\u251c\u2500\u2500 changelogs/\n\u2502   \u251c\u2500\u2500 001-create-users.xml\n\u2502   \u251c\u2500\u2500 002-create-routes-seats.xml\n\u2502   \u251c\u2500\u2500 003-create-bookings-payments.xml\n\u2502   \u2514\u2500\u2500 004-add-indexes.xml\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"2-master-changelog-changelog-masterxml",children:["2. Master Changelog (",(0,t.jsx)(n.code,{children:"changelog-master.xml"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<databaseChangeLog\n  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"\n  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog\n                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">\n\n  <include file="changelogs/001-create-users.xml"/>\n  <include file="changelogs/002-create-routes-seats.xml"/>\n  <include file="changelogs/003-create-bookings-payments.xml"/>\n  <include file="changelogs/004-add-indexes.xml"/>\n\n</databaseChangeLog>\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"3-sample-changeset-001-create-usersxml",children:["3. Sample Changeset (",(0,t.jsx)(n.code,{children:"001-create-users.xml"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<changeSet id="001" author="dev">\n  <createTable tableName="users">\n    <column name="id" type="UUID">\n      <constraints primaryKey="true" nullable="false"/>\n    </column>\n    <column name="email" type="VARCHAR(255)">\n      <constraints unique="true" nullable="false"/>\n    </column>\n    <column name="password" type="VARCHAR(255)"/>\n    <column name="created_at" type="TIMESTAMPTZ"/>\n  </createTable>\n</changeSet>\n'})}),"\n",(0,t.jsx)(n.h2,{id:"4-best-practices",children:"4. Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Atomic Changesets"}),": One logical change per file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Idempotency"}),": Avoid operations that fail on re-run."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rollback Support"}),": Provide ",(0,t.jsx)(n.code,{children:"<rollback>"})," tags for destructive changes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ChangeSet Metadata"}),": Include ",(0,t.jsx)(n.code,{children:'runOnChange="true"'})," for reference data updates."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Document Version: 1.0"}),"\n",(0,t.jsx)(n.li,{children:"Date: 2025-06-23"}),"\n",(0,t.jsx)(n.li,{children:"Author: ArturChernets"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);