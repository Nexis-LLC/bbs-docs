"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[1982],{6246:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"Reliability/Circuit_Breakers_and_Retries","title":"Circuit Breakers & Retries","description":"This document describes how to implement circuit breakers and retry policies to enhance service resilience in Spring Boot microservices.","source":"@site/docs/10_Reliability/02_Circuit_Breakers_and_Retries.md","sourceDirName":"10_Reliability","slug":"/Reliability/Circuit_Breakers_and_Retries","permalink":"/bbs-docs/en/docs/Reliability/Circuit_Breakers_and_Retries","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"External Service Resilience","permalink":"/bbs-docs/en/docs/Reliability/External_Service_Resilience"},"next":{"title":"Timeouts and Bulkheads","permalink":"/bbs-docs/en/docs/Reliability/Timeouts_and_Bulkheads"}}');var t=i(4848),s=i(8453);const a={},l="Circuit Breakers & Retries",c={},o=[{value:"1. Overview",id:"1-overview",level:2},{value:"2. Retry Strategy",id:"2-retry-strategy",level:2},{value:"Spring Retry (with annotations)",id:"spring-retry-with-annotations",level:3},{value:"RetryTemplate (Programmatic)",id:"retrytemplate-programmatic",level:3},{value:"3. Circuit Breaker Strategy",id:"3-circuit-breaker-strategy",level:2},{value:"Resilience4j",id:"resilience4j",level:3},{value:"4. Metrics and Observability",id:"4-metrics-and-observability",level:2},{value:"5. Best Practices",id:"5-best-practices",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"circuit-breakers--retries",children:"Circuit Breakers & Retries"})}),"\n",(0,t.jsx)(r.p,{children:"This document describes how to implement circuit breakers and retry policies to enhance service resilience in Spring Boot microservices."}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"1-overview",children:"1. Overview"}),"\n",(0,t.jsx)(r.p,{children:"Circuit breakers prevent a system from repeatedly trying a failing service, while retries offer a second chance for transient failures. Together, they guard against resource exhaustion and cascading failures."}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"2-retry-strategy",children:"2. Retry Strategy"}),"\n",(0,t.jsx)(r.h3,{id:"spring-retry-with-annotations",children:"Spring Retry (with annotations)"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"@Retryable(\n  value = { HttpServerErrorException.class },\n  maxAttempts = 3,\n  backoff = @Backoff(delay = 2000, multiplier = 2)\n)\npublic String callPaymentService() {\n    return restTemplate.getForObject(PAYMENT_URL, String.class);\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"retrytemplate-programmatic",children:"RetryTemplate (Programmatic)"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"RetryTemplate retryTemplate = new RetryTemplate();\n// configure policy...\nString result = retryTemplate.execute(ctx -> externalService.call());\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"3-circuit-breaker-strategy",children:"3. Circuit Breaker Strategy"}),"\n",(0,t.jsx)(r.h3,{id:"resilience4j",children:"Resilience4j"}),"\n",(0,t.jsx)(r.p,{children:"Add dependency:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:"<dependency>\n  <groupId>io.github.resilience4j</groupId>\n  <artifactId>resilience4j-spring-boot3</artifactId>\n</dependency>\n"})}),"\n",(0,t.jsx)(r.p,{children:"Configuration:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"resilience4j.circuitbreaker.instances.paymentService:\n  registerHealthIndicator: true\n  slidingWindowSize: 10\n  failureRateThreshold: 50\n  waitDurationInOpenState: 10s\n  permittedNumberOfCallsInHalfOpenState: 3\n"})}),"\n",(0,t.jsx)(r.p,{children:"Annotation-based usage:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'@CircuitBreaker(name = "paymentService", fallbackMethod = "fallback")\npublic String callPayment() {\n    return webClient.get().uri("/pay").retrieve().bodyToMono(String.class).block();\n}\n'})}),"\n",(0,t.jsx)(r.p,{children:"Fallback method:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'public String fallback(Throwable t) {\n    return "Payment service unavailable. Please try later.";\n}\n'})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"4-metrics-and-observability",children:"4. Metrics and Observability"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Use Micrometer + Prometheus to monitor circuit breaker states."}),"\n",(0,t.jsx)(r.li,{children:"Trigger alerts on high failure rates."}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"5-best-practices",children:"5. Best Practices"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Combine circuit breakers with ",(0,t.jsx)(r.strong,{children:"timeouts"})," and ",(0,t.jsx)(r.strong,{children:"bulkheads"}),"."]}),"\n",(0,t.jsx)(r.li,{children:"Separate circuit breaker configs per external dependency."}),"\n",(0,t.jsx)(r.li,{children:"Avoid retry storms (apply jitter and limits)."}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Document Version: 1.0"}),"\n",(0,t.jsx)(r.li,{children:"Date: 2025-06-24"}),"\n",(0,t.jsx)(r.li,{children:"Author: ArturChernets"}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>a,x:()=>l});var n=i(6540);const t={},s=n.createContext(t);function a(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);