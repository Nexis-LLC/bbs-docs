"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[145],{5404:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Scalability/Cache_and_Queue_Scaling","title":"Cache and Queue Scaling","description":"Guidelines for horizontally scaling cache and queue systems used in high-load Java Spring Boot systems.","source":"@site/docs/09_Scalability/02_Cache_and_Queue_Scaling.md","sourceDirName":"09_Scalability","slug":"/Scalability/Cache_and_Queue_Scaling","permalink":"/bbs-docs/en/docs/Scalability/Cache_and_Queue_Scaling","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Horizontal vs Vertical Scaling","permalink":"/bbs-docs/en/docs/Scalability/Horizontal_vs_Vertical_Scaling"},"next":{"title":"Auto Scaling Strategy","permalink":"/bbs-docs/en/docs/Scalability/Auto_Scaling_Strategy"}}');var a=i(4848),t=i(8453);const r={},l="Cache and Queue Scaling",c={},d=[{value:"Cache (Redis)",id:"cache-redis",level:2},{value:"Scaling Options:",id:"scaling-options",level:3},{value:"Spring Boot Integration:",id:"spring-boot-integration",level:3},{value:"Message Queues (Kafka / RabbitMQ)",id:"message-queues-kafka--rabbitmq",level:2},{value:"Kafka Scaling:",id:"kafka-scaling",level:3},{value:"RabbitMQ Scaling:",id:"rabbitmq-scaling",level:3},{value:"Tips",id:"tips",level:2}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"cache-and-queue-scaling",children:"Cache and Queue Scaling"})}),"\n",(0,a.jsx)(n.p,{children:"Guidelines for horizontally scaling cache and queue systems used in high-load Java Spring Boot systems."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"cache-redis",children:"Cache (Redis)"}),"\n",(0,a.jsx)(n.h3,{id:"scaling-options",children:"Scaling Options:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Clustering"}),": Partition keys across Redis nodes."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Read Replicas"}),": For heavy read scenarios."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Eviction Policy"}),": Set ",(0,a.jsx)(n.code,{children:"maxmemory-policy"})," wisely."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"spring-boot-integration",children:"Spring Boot Integration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"spring:\n  cache:\n    type: redis\n  redis:\n    host: redis-cluster\n"})}),"\n",(0,a.jsx)(n.p,{children:"Use Spring Cache abstraction with RedisTemplate or Lettuce client."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"message-queues-kafka--rabbitmq",children:"Message Queues (Kafka / RabbitMQ)"}),"\n",(0,a.jsx)(n.h3,{id:"kafka-scaling",children:"Kafka Scaling:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Dimension"}),(0,a.jsx)(n.th,{children:"Strategy"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Producer"}),(0,a.jsx)(n.td,{children:"Increase batch size, acks"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Broker"}),(0,a.jsx)(n.td,{children:"Add brokers, balance load"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Consumer"}),(0,a.jsx)(n.td,{children:"Increase partitions"})]})]})]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Spring Boot integrates via ",(0,a.jsx)(n.code,{children:"spring-kafka"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"rabbitmq-scaling",children:"RabbitMQ Scaling:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Use quorum queues for HA."}),"\n",(0,a.jsx)(n.li,{children:"Separate workloads via routing keys."}),"\n",(0,a.jsx)(n.li,{children:"Horizontal scale via federation / sharding plugin."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"tips",children:"Tips"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Redis: ",(0,a.jsx)(n.code,{children:"INFO stats"}),", eviction rate, latency."]}),"\n",(0,a.jsx)(n.li,{children:"Kafka: lag per partition, consumer group metrics."}),"\n",(0,a.jsx)(n.li,{children:"Alert on queue length and retry spikes."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Document Version: 1.0"}),"\n",(0,a.jsx)(n.li,{children:"Date: 2025-06-24"}),"\n",(0,a.jsx)(n.li,{children:"Author: ArturChernets"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);