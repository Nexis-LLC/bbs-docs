"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[64],{5855:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"API/Proto_Definitions/BookingService","title":"Booking Service Proto Definition","description":"1. Introduction","source":"@site/docs/05_API/02_Proto_Definitions/BookingService.md","sourceDirName":"05_API/02_Proto_Definitions","slug":"/API/Proto_Definitions/BookingService","permalink":"/bbs-docs/en/docs/API/Proto_Definitions/BookingService","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Proto Definitions","permalink":"/bbs-docs/en/docs/api/proto-definitions"},"next":{"title":"API Error Handling","permalink":"/bbs-docs/en/docs/API/Error_Handling"}}');var t=n(4848),r=n(8453);const s={},c="Booking Service Proto Definition",a={},d=[{value:"1. Introduction",id:"1-introduction",level:2},{value:"2. Proto File Location",id:"2-proto-file-location",level:2},{value:"3. Service Definition (<code>BookingService</code>)",id:"3-service-definition-bookingservice",level:2}];function p(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"booking-service-proto-definition",children:"Booking Service Proto Definition"})}),"\n",(0,t.jsx)(o.h2,{id:"1-introduction",children:"1. Introduction"}),"\n",(0,t.jsxs)(o.p,{children:["This document details the Protocol Buffer (Protobuf) definition for the ",(0,t.jsx)(o.code,{children:"BookingService"}),", which manages core booking operations within the Bus Ticket Booking System. This service is a critical component for creating, retrieving, updating, and canceling bus ticket reservations."]}),"\n",(0,t.jsx)(o.h2,{id:"2-proto-file-location",children:"2. Proto File Location"}),"\n",(0,t.jsxs)(o.p,{children:["The official ",(0,t.jsx)(o.code,{children:".proto"})," file for this service is located at:\n",(0,t.jsx)(o.code,{children:"[api-contracts-repo-link]/proto/com/example/bookings/v1/booking_service.proto"})]}),"\n",(0,t.jsxs)(o.h2,{id:"3-service-definition-bookingservice",children:["3. Service Definition (",(0,t.jsx)(o.code,{children:"BookingService"}),")"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-protobuf",children:'syntax = "proto3";\n\npackage com.example.bookings.v1;\n\nimport "google/protobuf/timestamp.proto";\nimport "google/protobuf/duration.proto";\nimport "com/example/common/v1/common_types.proto"; // Assuming common types are defined elsewhere\n\nservice BookingService {\n  // Creates a new bus ticket booking.\n  rpc CreateBooking(CreateBookingRequest) returns (CreateBookingResponse) {\n    option (google.api.http) = {\n      post: "/v1/bookings"\n      body: "*"\n    };\n  }\n\n  // Retrieves booking details by ID.\n  rpc GetBooking(GetBookingRequest) returns (GetBookingResponse);\n\n  // Updates an existing booking (e.g., change seat, add passenger).\n  rpc UpdateBooking(UpdateBookingRequest) returns (UpdateBookingResponse);\n\n  // Cancels a booking.\n  rpc CancelBooking(CancelBookingRequest) returns (CancelBookingResponse);\n\n  // Confirms a payment for a pending booking.\n  rpc ConfirmPayment(ConfirmPaymentRequest) returns (ConfirmPaymentResponse);\n}\n'})})]})}function l(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>c});var i=n(6540);const t={},r=i.createContext(t);function s(e){const o=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:o},e.children)}}}]);