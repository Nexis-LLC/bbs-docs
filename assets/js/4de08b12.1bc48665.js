"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[4711],{5465:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Architecture/ADRs/kafka-over-rabbitmq","title":"kafka-over-rabbitmq","description":"ADR 002: Kafka for Event Streaming (Over RabbitMQ)","source":"@site/docs/03_Architecture/ADRs/002-kafka-over-rabbitmq.md","sourceDirName":"03_Architecture/ADRs","slug":"/Architecture/ADRs/kafka-over-rabbitmq","permalink":"/bbs-docs/docs/Architecture/ADRs/kafka-over-rabbitmq","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"use-spring-boot","permalink":"/bbs-docs/docs/Architecture/ADRs/use-spring-boot"},"next":{"title":"grpc-over-rest","permalink":"/bbs-docs/docs/Architecture/ADRs/grpc-over-rest"}}');var s=t(4848),i=t(8453);const o={},a=void 0,c={},l=[{value:"ADR 002: Kafka for Event Streaming (Over RabbitMQ)",id:"adr-002-kafka-for-event-streaming-over-rabbitmq",level:2}];function u(e){const r={br:"br",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"adr-002-kafka-for-event-streaming-over-rabbitmq",children:"ADR 002: Kafka for Event Streaming (Over RabbitMQ)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Context:"}),(0,s.jsx)(r.br,{}),"\n","We require high\u2011throughput, durable, ordered event streaming for seat inventory updates, payment status events, and saga orchestration."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Decision:"}),(0,s.jsx)(r.br,{}),"\n","Use ",(0,s.jsx)(r.strong,{children:"Apache Kafka"})," as our event backbone, with Confluent Schema Registry & Avro for schema governance."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Consequences:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Pros:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Extremely high throughput (millions of messages/sec)."}),"\n",(0,s.jsx)(r.li,{children:"Native support for consumer groups, partitioning, exactly\u2011once semantics (idempotent producers)."}),"\n",(0,s.jsx)(r.li,{children:"Mature ecosystem: MirrorMaker 2.0 for DR, stream processing options (Kafka Streams)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Cons:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Operational complexity: KRaft, cluster sizing, retention policies."}),"\n",(0,s.jsx)(r.li,{children:"Slightly higher learning curve vs. RabbitMQ."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{})]})}function d(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>a});var n=t(6540);const s={},i=n.createContext(s);function o(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);