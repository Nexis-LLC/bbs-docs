"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[9762],{4237:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"API/API_Contracts","title":"5.1. API Contracts","description":"1. Introduction to API Contracts","source":"@site/docs/05_API/01_API_Contracts.md","sourceDirName":"05_API","slug":"/API/API_Contracts","permalink":"/bbs-docs/docs/API/API_Contracts","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"5. API","permalink":"/bbs-docs/docs/api"},"next":{"title":"Proto Definitions","permalink":"/bbs-docs/docs/api/proto-definitions"}}');var r=i(4848),t=i(8453);const o={},a="5.1. API Contracts",c={},l=[{value:"1. Introduction to API Contracts",id:"1-introduction-to-api-contracts",level:2},{value:"2. API Design Principles",id:"2-api-design-principles",level:2},{value:"3. Types of APIs",id:"3-types-of-apis",level:2},{value:"3.1. RESTful APIs",id:"31-restful-apis",level:3},{value:"3.2. gRPC APIs (Internal)",id:"32-grpc-apis-internal",level:3},{value:"4. Contract Management and Governance",id:"4-contract-management-and-governance",level:2},{value:"5. Security Considerations in API Contracts",id:"5-security-considerations-in-api-contracts",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"51-api-contracts",children:"5.1. API Contracts"})}),"\n",(0,r.jsx)(n.h2,{id:"1-introduction-to-api-contracts",children:"1. Introduction to API Contracts"}),"\n",(0,r.jsx)(n.p,{children:"API Contracts serve as the definitive agreement between service consumers and providers, outlining the precise format, behavior, and expectations of each API endpoint. In the Bus Ticket Booking System, well-defined API contracts are crucial for enabling seamless integration, facilitating parallel development, and ensuring forward and backward compatibility as services evolve."}),"\n",(0,r.jsx)(n.p,{children:"We utilize a contract-first approach, where API definitions are the primary source of truth, from which client stubs and server skeletons can be automatically generated. This minimizes discrepancies and promotes robust interoperability."}),"\n",(0,r.jsx)(n.h2,{id:"2-api-design-principles",children:"2. API Design Principles"}),"\n",(0,r.jsx)(n.p,{children:"Our API design adheres to the following principles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistency:"})," Standardized naming conventions, error structures, and data types across all APIs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clarity:"})," Intuitive and self-describing endpoints and data models."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Completeness:"})," Contracts fully specify all possible inputs, outputs, and behaviors, including edge cases."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Evolvability:"})," Designed to support backward and forward compatibility, minimizing breaking changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Efficiency:"})," Optimized for performance, minimizing payload size and unnecessary network calls."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security:"})," Incorporates authentication, authorization, and data integrity considerations from the ground up."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-types-of-apis",children:"3. Types of APIs"}),"\n",(0,r.jsx)(n.p,{children:"The Bus Ticket Booking System exposes two primary types of APIs:"}),"\n",(0,r.jsx)(n.h3,{id:"31-restful-apis",children:"3.1. RESTful APIs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose:"})," Primarily for external clients (e.g., web frontend, mobile apps) requiring easy integration via HTTP."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Format:"})," JSON over HTTP/1.1 or HTTP/2."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Versioning:"})," URI-based versioning (e.g., ",(0,r.jsx)(n.code,{children:"/v1/bookings"}),"). Changes that are not backward compatible will increment the major version. Minor updates (backward compatible additions) will be deployed without version change."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication:"})," OAuth2/OIDC via Keycloak for user authentication and authorization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Booking Management:"})," ",(0,r.jsx)(n.code,{children:"POST /v1/bookings"}),", ",(0,r.jsx)(n.code,{children:"GET /v1/bookings/{id}"}),", ",(0,r.jsx)(n.code,{children:"PUT /v1/bookings/{id}/cancel"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Search and Inventory:"})," ",(0,r.jsx)(n.code,{children:"GET /v1/routes"}),", ",(0,r.jsx)(n.code,{children:"GET /v1/routes/{id}/availability"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"User Profiles:"})," ",(0,r.jsx)(n.code,{children:"GET /v1/users/{id}"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"32-grpc-apis-internal",children:"3.2. gRPC APIs (Internal)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose:"})," Primarily for inter-service communication within the microservices architecture. Provides high performance, efficient serialization (Protobuf), and strong type-checking."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Format:"})," Protobuf over HTTP/2."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Versioning:"})," Handled via Protobuf package names (e.g., ",(0,r.jsx)(n.code,{children:"package com.example.bookings.v1;"}),"). Major changes increment the package version. Backward compatibility is enforced via Schema Registry."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication:"})," mTLS (Mutual TLS) for service-to-service authentication and JWT token propagation for user context."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Seat Reservation Service:"})," ",(0,r.jsx)(n.code,{children:"ReserveSeats"}),", ",(0,r.jsx)(n.code,{children:"ReleaseSeats"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Payment Gateway Integration:"})," ",(0,r.jsx)(n.code,{children:"ProcessPayment"}),", ",(0,r.jsx)(n.code,{children:"RefundPayment"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Notification Service:"})," ",(0,r.jsx)(n.code,{children:"SendEmailNotification"}),", ",(0,r.jsx)(n.code,{children:"SendSMSNotification"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"4-contract-management-and-governance",children:"4. Contract Management and Governance"}),"\n",(0,r.jsx)(n.p,{children:"API contracts are managed as follows:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Centralized Repository:"})," All ",(0,r.jsx)(n.code,{children:".proto"})," files (for gRPC) and OpenAPI (Swagger) specifications (for REST) are maintained in a dedicated ",(0,r.jsx)(n.code,{children:"api-contracts"})," Git repository."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Contract-First Development:"})," Development teams create or update contracts first, then generate code (stubs, skeletons) using tools like Protoc and OpenAPI Generator."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automated Validation:"})," CI/CD pipelines include automated checks to:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Validate ",(0,r.jsx)(n.code,{children:".proto"})," files against Confluent Schema Registry for backward/forward compatibility."]}),"\n",(0,r.jsx)(n.li,{children:"Validate OpenAPI specifications for correctness and adherence to style guides."}),"\n",(0,r.jsx)(n.li,{children:"Run integration tests against generated interfaces."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation Generation:"})," Contracts are used to automatically generate up-to-date API documentation (e.g., Swagger UI, Docusaurus pages)."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-security-considerations-in-api-contracts",children:"5. Security Considerations in API Contracts"}),"\n",(0,r.jsx)(n.p,{children:"API contracts explicitly define security-related parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication Mechanisms:"})," Specifies expected headers (e.g., ",(0,r.jsx)(n.code,{children:"Authorization: Bearer <JWT>"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authorization Scopes/Roles:"})," Defines the required OAuth2 scopes or user roles for accessing specific endpoints/methods."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Input Validation:"})," Specifies data types, constraints, and regular expressions for all input fields to prevent injection attacks and ensure data integrity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sensitive Data Handling:"})," Clearly marks sensitive fields (e.g., PII, payment info) and outlines their encryption/masking requirements."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Document Version: 1.0"}),"\n",(0,r.jsx)(n.li,{children:"Date: 2025-06-22"}),"\n",(0,r.jsx)(n.li,{children:"Author: ArturChernets"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);