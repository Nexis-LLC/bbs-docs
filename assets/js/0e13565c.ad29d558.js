"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[8823],{7650:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Architecture/ADRs/grpc-over-rest","title":"grpc-over-rest","description":"ADR 003: gRPC for Inter\u2011Service Communication (Over REST)","source":"@site/docs/03_Architecture/ADRs/003-grpc-over-rest.md","sourceDirName":"03_Architecture/ADRs","slug":"/Architecture/ADRs/grpc-over-rest","permalink":"/bbs-docs/docs/Architecture/ADRs/grpc-over-rest","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"kafka-over-rabbitmq","permalink":"/bbs-docs/docs/Architecture/ADRs/kafka-over-rabbitmq"},"next":{"title":"saga-pattern","permalink":"/bbs-docs/docs/Architecture/ADRs/saga-pattern"}}');var s=n(4848),o=n(8453);const i={},c=void 0,a={},l=[{value:"ADR 003: gRPC for Inter\u2011Service Communication (Over REST)",id:"adr-003-grpc-for-interservice-communication-over-rest",level:2}];function d(e){const r={br:"br",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"adr-003-grpc-for-interservice-communication-over-rest",children:"ADR 003: gRPC for Inter\u2011Service Communication (Over REST)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Context:"}),(0,s.jsx)(r.br,{}),"\n","Internal service\u2011to\u2011service calls (e.g. Booking \u2192 Seat, Booking \u2192 Payment) require low latency, strong typing, and bi\u2011directional streaming for seat\u2011hold workflows."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Decision:"}),(0,s.jsx)(r.br,{}),"\n","Adopt ",(0,s.jsx)(r.strong,{children:"gRPC"})," with Protocol Buffers for all internal RPCs. Expose REST only at the API Gateway boundary."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Consequences:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Pros:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Faster serialization (Protobuf vs. JSON)."}),"\n",(0,s.jsx)(r.li,{children:"Built\u2011in streaming and deadlines."}),"\n",(0,s.jsx)(r.li,{children:"Auto\u2011generated client/server stubs increase consistency."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Cons:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Requires gateway translation layer for public HTTP APIs."}),"\n",(0,s.jsx)(r.li,{children:"Additional operational tooling for load\u2011balancing gRPC (Envoy or Spring Cloud Gateway plugins)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>c});var t=n(6540);const s={},o=t.createContext(s);function i(e){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);