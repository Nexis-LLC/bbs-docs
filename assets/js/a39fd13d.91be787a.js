"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[4558],{4536:(r,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Architecture/ADRs/postgres-over-nosql","title":"postgres-over-nosql","description":"ADR 005: PostgreSQL as Primary Data Store (Over NoSQL)","source":"@site/docs/03_Architecture/ADRs/005-postgres-over-nosql.md","sourceDirName":"03_Architecture/ADRs","slug":"/Architecture/ADRs/postgres-over-nosql","permalink":"/bbs-docs/docs/Architecture/ADRs/postgres-over-nosql","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"saga-pattern","permalink":"/bbs-docs/docs/Architecture/ADRs/saga-pattern"},"next":{"title":"redis-caching","permalink":"/bbs-docs/docs/Architecture/ADRs/redis-caching"}}');var t=s(4848),o=s(8453);const i={},a=void 0,c={},l=[{value:"ADR 005: PostgreSQL as Primary Data Store (Over NoSQL)",id:"adr-005-postgresql-as-primary-data-store-over-nosql",level:2}];function d(r){const e={br:"br",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"adr-005-postgresql-as-primary-data-store-over-nosql",children:"ADR 005: PostgreSQL as Primary Data Store (Over NoSQL)"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Context:"}),(0,t.jsx)(e.br,{}),"\n","Booking data requires ACID transactions, strong consistency (no overbooking), and relational queries (joins for reporting)."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Decision:"}),(0,t.jsx)(e.br,{}),"\n","Use ",(0,t.jsx)(e.strong,{children:"PostgreSQL"})," (managed via Patroni + etcd for HA) as the system of record for all transactional data."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Consequences:"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Pros:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Proven ACID guarantees, rich SQL features, row\u2011level locking for optimistic concurrency."}),"\n",(0,t.jsx)(e.li,{children:"Easy integration with Liquibase for schema migrations."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Cons:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Scaling write throughput requires vertical scaling or sharding strategies."}),"\n",(0,t.jsx)(e.li,{children:"Requires operational overhead for HA (Patroni) and backups (PITR)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{})]})}function u(r={}){const{wrapper:e}={...(0,o.R)(),...r.components};return e?(0,t.jsx)(e,{...r,children:(0,t.jsx)(d,{...r})}):d(r)}},8453:(r,e,s)=>{s.d(e,{R:()=>i,x:()=>a});var n=s(6540);const t={},o=n.createContext(t);function i(r){const e=n.useContext(o);return n.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function a(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(t):r.components||t:i(r.components),n.createElement(o.Provider,{value:e},r.children)}}}]);