"use strict";(self.webpackChunkbbs_docs=self.webpackChunkbbs_docs||[]).push([[8551],{6016:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Architecture/ADRs/redis-caching","title":"redis-caching","description":"ADR 006: Redis for Caching & Idempotency (Over In\u2011Memory Only)","source":"@site/docs/03_Architecture/ADRs/006-redis-caching.md","sourceDirName":"03_Architecture/ADRs","slug":"/Architecture/ADRs/redis-caching","permalink":"/bbs-docs/docs/Architecture/ADRs/redis-caching","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"postgres-over-nosql","permalink":"/bbs-docs/docs/Architecture/ADRs/postgres-over-nosql"},"next":{"title":"k8s-gitops","permalink":"/bbs-docs/docs/Architecture/ADRs/k8s-gitops"}}');var t=s(4848),o=s(8453);const i={},c=void 0,d={},l=[{value:"ADR 006: Redis for Caching &amp; Idempotency (Over In\u2011Memory Only)",id:"adr-006-redis-for-caching--idempotency-over-inmemory-only",level:2}];function a(e){const n={br:"br",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"adr-006-redis-for-caching--idempotency-over-inmemory-only",children:"ADR 006: Redis for Caching & Idempotency (Over In\u2011Memory Only)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Context:"}),(0,t.jsx)(n.br,{}),"\n","We need a low\u2011latency cache for seat\u2011map lookups and a shared store for idempotency keys across pods."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Decision:"}),(0,t.jsx)(n.br,{}),"\n","Deploy a ",(0,t.jsx)(n.strong,{children:"Redis"})," cluster (with TTL, LRU eviction) for read cache and idempotency, leveraging Redlock for stampede protection."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Consequences:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pros:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Sub\u2011millisecond reads/writes, TTL controls staleness."}),"\n",(0,t.jsx)(n.li,{children:"Centralized idempotency store shared by all instances."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cons:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Single additional datastore to operate and monitor."}),"\n",(0,t.jsx)(n.li,{children:"Potential for cache\u2011miss thundering without proper mutexing."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);